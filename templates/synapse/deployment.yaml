apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matrix.fullname" . }}-synapse
  labels:
{{ include "matrix.labels" . | indent 4 }}
{{ include "matrix.synapse.labels" . | indent 4}}
spec:
  replicas: {{ .Values.synapse.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "matrix.name" . }}-synapse
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "matrix.name" . }}-synapse
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: load-hs
          image: shire.jfrog.io/shire-docker/hs-config-builder:0.1.3
          env:
            - name: HOMESERVER_YAML
              valueFrom:
                configMapKeyRef:
                  name: {{ include "matrix.fullname" . }}-synapse-config
                  # Specify the key associated with the value
                  key: homeserver.yaml
            - name: SHARED_SECRET
              valueFrom:
                secretKeyRef:
                  name: shared-secret
                  # Specify the key associated with the value
                  key: shared_secret
          volumeMounts:
            - name: synapse-config
              mountPath: /data
        - name: set-perms
          image: busybox
          command: ["/bin/chown","-R","991:991", "/data"]
          volumeMounts:
            - name: synapse-config
              mountPath: /data
            - name: signing-key
              mountPath: /data/keys
            {{- if eq .Values.matrix.db.engine "sqlite3" }}
            - name: sqlite3-db
              mountPath: /data/db
            {{- end }}
      {{- if .Release.IsInstall }}
        - name: generate-configuration
          image: "{{ .Values.synapse.image.repository }}:{{ .Values.synapse.image.tag }}"
          imagePullPolicy: {{ .Values.synapse.image.pullPolicy }}
          env:
            - name: SYNAPSE_SERVER_NAME
              value: {{ .Values.matrix.serverName }}
            - name: SYNAPSE_REPORT_STATS
              value: {{ .Values.matrix.telemetry | ternary "yes" "no" | quote }}
          args: ["generate"]
          volumeMounts:
            - name: synapse-config
              mountPath: /data
            - name: signing-key
              mountPath: /data/keys
      {{- end }} {{/* end if .Release.IsInstall */}}
      containers:
        - name: "synapse"
          image: "{{ .Values.synapse.image.repository }}:{{ .Values.synapse.image.tag }}"
          imagePullPolicy: {{ .Values.synapse.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8008
              protocol: TCP
            {{- if .Values.synapse.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.synapse.metrics.port }}
              protocol: TCP
            {{- end }}
          volumeMounts:
            - name: synapse-config
              mountPath: /data
            - name: log-config
              mountPath: /app/config
            - name: signing-key
              mountPath: /data/keys
            - name: media-store
              mountPath: /data/media_store
            {{- if eq .Values.matrix.db.engine "sqlite3" }}
            - name: sqlite3-db
              mountPath: /data/db
            {{- end }}
            - name: uploads
              mountPath: /data/uploads
            - name: tmp
              mountPath: /tmp
          readinessProbe:
            httpGet:
              path: /_matrix/static/
              port: http
            {{- if .Values.synapse.probes.readiness }}
            {{- toYaml .Values.synapse.probes.readiness | nindent 12 }}
            {{- end }}
          startupProbe:
            httpGet:
              path: /_matrix/static/
              port: http
            {{- if .Values.synapse.probes.startup }}
            {{- toYaml .Values.synapse.probes.startup | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /_matrix/static/
              port: http
            {{- if .Values.synapse.probes.liveness }}
            {{- toYaml .Values.synapse.probes.liveness | nindent 12 }}
            {{- end }}
          {{- with .Values.synapse.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: log-config
          configMap:
            name: {{ include "matrix.fullname" . }}-synapse-log-config
        - name: signing-key
          persistentVolumeClaim:
            claimName: {{ include "matrix.fullname" . }}-signing-key
        - name: media-store
          persistentVolumeClaim:
            claimName: {{ include "matrix.fullname" . }}-media-store
        {{- if eq .Values.matrix.db.engine "sqlite3" }}
        - name: sqlite3-db
          persistentVolumeClaim:
            claimName: {{ include "matrix.fullname" . }}-sqlite3-db
        {{- end }}
        # Ephemeral in-progress uploads
        - name: uploads
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: synapse-config
          emptyDir: {}
